// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Book {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  isbn             String     @unique
  cover            String
  title            String
  description      String
  author           Author     @relation(fields: [authorId], references: [id])
  authorId         String     @db.ObjectId
  published        String
  categoryIDs      String[]   @db.ObjectId
  categories       Category[] @relation(fields: [categoryIDs], references: [id])
  price            Float
  numberPages      Int
  format           String
  language         String
  reviews          Review[]
  favoriteUsersIDs String[]   @default([]) @db.ObjectId
  favoriteUsers    User[]     @relation(fields: [favoriteUsersIDs], references: [id], name: "favorite")
  recentUsersIDs   String[]   @default([]) @db.ObjectId
  recentUsers      User[]     @relation(fields: [recentUsersIDs], references: [id], name: "recent")
}

model Author {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  photo     String?
  firstName String
  lastName  String
  books     Book[]
}

model Category {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  booksIDs String[] @db.ObjectId
  books    Book[]   @relation(fields: [booksIDs], references: [id])
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  body      String
  rating    Int
  Book      Book     @relation(fields: [bookId], references: [id])
  bookId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  username     String   @unique
  firstname    String
  lastname     String
  email        String   @unique
  password     String
  photo        String?
  role         String   @default("user")
  membership   Boolean  @default(false)
  favoritesIDs String[] @default([]) @db.ObjectId
  favorites    Book[]   @relation(fields: [favoritesIDs], references: [id], name: "favorite")
  recentIDs    String[] @default([]) @db.ObjectId
  recent       Book[]   @relation(fields: [recentIDs], references: [id], name: "recent")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
